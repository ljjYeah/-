// 给定一个 n × n 的二维矩阵表示一个图像。
//
// 将图像顺时针旋转 90 度。
//
// 说明：
//
// 你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。
//
// 示例 1:
//
// 给定 matrix =
//     [
//         [1,2,3],
//         [4,5,6],
//         [7,8,9]
//     ],
//
//     原地旋转输入矩阵，使其变为:
//     [
//         [7,4,1],
//         [8,5,2],
//         [9,6,3]
//     ]
// 示例 2:
//
// 给定 matrix =
//     [
//         [ 5, 1, 9,11],
//         [ 2, 4, 8,10],
//         [13, 3, 6, 7],
//         [15,14,12,16]
//     ],
//
//     原地旋转输入矩阵，使其变为:
//     [
//         [15,13, 2, 5],
//         [14, 3, 4, 1],
//         [12, 6, 8, 9],
//         [16, 7,10,11]
//     ]


//思路：
//1.首先，先沿4，5，7这条线进行数据交换，以示例1演示就是
//[
//         [7,8,9],
//         [4,5,6],
//         [1,2,3]
//     ],
//2.然后沿着7，5，3对角线进行两个数据的交换
//     [
//         [7,4,1],
//         [8,5,2],
//         [9,6,3]
//     ]
function matrix(arr) {
    const len = arr.length;
    //横向交换
    for (let i = 0, len = arr.length; i <= len - 1; i++) {
        for (let j = 0; j < (len-1) / 2; j++) {
            let temp = arr[j][i];
            arr[j][i] = arr[len-j-1][i];
            arr[len-j-1][i] = temp
        }
    }
    //对角线交换
    for (let i = 0; i < len; i++) {
        for (let j = 0; j < i; j++) {
            let temp = arr[j][i];
            arr[j][i] = arr[i][j];
            arr[i][j] = temp;
        }
    }
    return arr;
}

const result = matrix([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]);
console.log(result);